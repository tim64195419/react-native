{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/chengpo-chien/expo-practice/Mahjong/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Container, Form, Input, Item, Button, Label } from 'native-base';\nimport firebase from 'firebase';\nimport * as Google from \"expo-google-app-auth\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.signUpUser = function (email, password) {\n      try {\n        if (_this.state.password.length < 6) {\n          alert('Please enter at least 6 characters');\n          return;\n        }\n\n        firebase.auth().createUserWithEmailAndPassword(email, password);\n      } catch (error) {\n        console.log(error.toString());\n      }\n    };\n\n    _this.logInUser = function (email, password) {\n      try {\n        firebase.auth().signInWithEmailAndPassword(email, password).then(function (user) {});\n      } catch (error) {\n        console.log(error.toString());\n      }\n    };\n\n    _this.isUserEqual = function (googleUser, firebaseUser) {\n      if (firebaseUser) {\n        var providerData = firebaseUser.providerData;\n\n        for (var i = 0; i < providerData.length; i++) {\n          if (providerData[i].providerId === firebase.auth.GoogleAuthProvider.PROVIDER_ID && providerData[i].uid === googleUser.getBasicProfile().getId()) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    };\n\n    _this.onSignIn = function (googleUser) {\n      var unsubscribe = firebase.auth().onAuthStateChanged(function (firebaseUser) {\n        unsubscribe();\n\n        if (!this.isUserEqual(googleUser, firebaseUser)) {\n          var credential = firebase.auth.GoogleAuthProvider.credential(googleUser.idToken, googleUser.accessToken);\n          firebase.auth().signInWithCredential(credential).then(function (result) {\n            console.log('user signed in ');\n\n            if (result.additionalUserInfo.isNewUser) {\n              firebase.database().ref('/users/' + result.user.uid).set({\n                gmail: result.additionalUserInfo.profile.email,\n                profile_picture: result.additionalUserInfo.profile.picture,\n                first_name: result.additionalUserInfo.profile.given_name,\n                last_name: result.additionalUserInfo.profile.family_name,\n                created_at: Date.now()\n              }).then(function (snapshot) {});\n            } else {\n              firebase.database().ref('/users/' + result.user.uid).update({\n                last_logged_in: Date.now()\n              });\n            }\n          }).catch(function (error) {\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            var email = error.email;\n            var credential = error.credential;\n          });\n        } else {\n          console.log('User already signed-in Firebase.');\n        }\n      }.bind(_assertThisInitialized(_this)));\n    };\n\n    _this.signInWithGoogleAsync = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Google.logInAsync({\n                iosClientId: '563873674691-lefn5jqsa7ckds4ituh0bicrf1vm5k4l.apps.googleusercontent.com',\n                scopes: ['profile', 'email']\n              }));\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.type === 'success')) {\n                _context.next = 9;\n                break;\n              }\n\n              _this.onSignIn(result);\n\n              return _context.abrupt(\"return\", result.accessToken);\n\n            case 9:\n              return _context.abrupt(\"return\", {\n                cancelled: true\n              });\n\n            case 10:\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", {\n                error: true\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    };\n\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user != null) {}\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }, \"Email\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      })), React.createElement(Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, \"Password\"), React.createElement(Input, {\n        secureTextEntry: true,\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      })), React.createElement(Button, {\n        style: {\n          marginTop: 10\n        },\n        full: true,\n        rounded: true,\n        success: true,\n        onPress: function onPress() {\n          return _this2.logInUser(_this2.state.email, _this2.state.password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }\n      }, \"Log in\")), React.createElement(Button, {\n        style: {\n          marginTop: 10\n        },\n        full: true,\n        rounded: true,\n        primary: true,\n        onPress: function onPress() {\n          return _this2.signUpUser(_this2.state.email, _this2.state.password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, \"Sign up\")), React.createElement(Button, {\n        style: {\n          marginTop: 10\n        },\n        full: true,\n        rounded: true,\n        primary: true,\n        onPress: function onPress() {\n          return _this2.signInWithGoogleAsync();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, \" Login With Google\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    padding: 10\n  }\n});","map":{"version":3,"sources":["/Users/chengpo-chien/expo-practice/Mahjong/screens/LoginScreen.js"],"names":["React","Component","Container","Form","Input","Item","Button","Label","firebase","Google","LoginScreen","props","signUpUser","email","password","state","length","alert","auth","createUserWithEmailAndPassword","error","console","log","toString","logInUser","signInWithEmailAndPassword","then","user","isUserEqual","googleUser","firebaseUser","providerData","i","providerId","GoogleAuthProvider","PROVIDER_ID","uid","getBasicProfile","getId","onSignIn","unsubscribe","onAuthStateChanged","credential","idToken","accessToken","signInWithCredential","result","additionalUserInfo","isNewUser","database","ref","set","gmail","profile","profile_picture","picture","first_name","given_name","last_name","family_name","created_at","Date","now","snapshot","update","last_logged_in","catch","errorCode","code","errorMessage","message","bind","signInWithGoogleAsync","logInAsync","iosClientId","scopes","type","cancelled","styles","container","setState","marginTop","color","StyleSheet","create","flex","backgroundColor","justifyContent","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Container,Form, Input, Item, Button, Label } from 'native-base'\n\nimport firebase from 'firebase';\nimport * as Google from \"expo-google-app-auth\"\n// import * as Expo from 'expo';\n\n\nclass LoginScreen extends Component {\n  constructor(props){\n    super(props)\n    this.state=({\n      email:'',\n      password:''\n    })\n  }\n  componentDidMount() {\n\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user != null) {\n        // console.log(user)\n      }\n    })\n  }\n\n  signUpUser = (email,password)=>{\n    try{\n      if(this.state.password.length<6){\n        alert('Please enter at least 6 characters')\n        return;\n      }\n\n      firebase.auth().createUserWithEmailAndPassword(email,password)\n    }catch(error){\n      console.log(error.toString())\n    }\n\n  }\n\n  logInUser = (email,password)=>{\n    try{\n      firebase.auth().signInWithEmailAndPassword(email,password).then(function(user){\n        // console.log(user)\n      })\n\n    }catch(error){\n      console.log(error.toString())\n    }\n\n  }\n  //google isUserEqual\n  isUserEqual = (googleUser, firebaseUser) => {\n    if (firebaseUser) {\n      var providerData = firebaseUser.providerData;\n      for (var i = 0; i < providerData.length; i++) {\n        if (\n          providerData[i].providerId ===\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID &&\n          providerData[i].uid === googleUser.getBasicProfile().getId()\n        ) {\n          // We don't need to reauth the Firebase connection.\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  onSignIn = (googleUser) => {\n    // console.log('Google Auth Response:', googleUser);\n    // We need to register an Observer on Firebase Auth to make sure auth is initialized.\n    var unsubscribe = firebase.auth().onAuthStateChanged(\n      function(firebaseUser) {\n        unsubscribe();\n        // Check if we are already signed-in Firebase with the correct user.\n        if (!this.isUserEqual(googleUser, firebaseUser)) {\n          // console.log(firebaseUser)\n          // Build Firebase credential with the Google ID token.\n          var credential = firebase.auth.GoogleAuthProvider.credential(\n            googleUser.idToken,\n            googleUser.accessToken,\n            // googleUser.getAuthResponse().id_token\n            \n          );\n          // console.log(credential)\n          \n          // Sign in with credential from the Google user.\n          //signInAndRetrieveDataWithCredential\n          firebase\n            .auth()\n            .signInWithCredential(credential)\n            .then(function(result) {\n              console.log('user signed in ');\n             \n              if(result.additionalUserInfo.isNewUser){\n                firebase\n                  .database()\n                  .ref('/users/' + result.user.uid)\n                  .set({\n                    gmail: result.additionalUserInfo.profile.email,\n                    profile_picture: result.additionalUserInfo.profile.picture,\n                    first_name: result.additionalUserInfo.profile.given_name,\n                    last_name: result.additionalUserInfo.profile.family_name,\n                    created_at: Date.now()\n                  })\n                  .then(function(snapshot) {\n                    // console.log('Snapshot', snapshot);\n                  });\n              } else {\n                firebase\n                  .database()\n                  .ref('/users/' + result.user.uid)\n                  .update({\n                    last_logged_in: Date.now()\n                  });\n              }\n            })\n            .catch(function(error) {\n              // Handle Errors here.\n              var errorCode = error.code;\n              var errorMessage = error.message;\n              // The email of the user's account used.\n              var email = error.email;\n              // The firebase.auth.AuthCredential type that was used.\n              var credential = error.credential;\n              // ...\n            });\n        } else {\n          console.log('User already signed-in Firebase.');\n        }\n      }.bind(this)\n    );\n  };\n    signInWithGoogleAsync = async () => {\n        try {\n          const result = await Google.logInAsync({\n            // androidClientId: YOUR_CLIENT_ID_HERE,\n            // behavior:'web',\n            iosClientId: '563873674691-lefn5jqsa7ckds4ituh0bicrf1vm5k4l.apps.googleusercontent.com',\n            scopes: ['profile', 'email'],\n            \n          });\n      \n          if (result.type === 'success') {\n            this.onSignIn(result)\n            \n            return result.accessToken;\n          } else {\n            return { cancelled: true };\n          }\n        } catch (e) {\n          return { error: true };\n        }\n      }\n\n    render() {\n        return (\n          <Container style={styles.container}>\n            <Form>\n              <Item>\n                <Label>Email</Label>\n                <Input \n                  autoCorrect={false}\n                  autoCapitalize='none'\n                  onChangeText={(email)=>this.setState({email})}\n    \n                />\n              </Item>\n              <Item>\n                <Label>Password</Label>\n                <Input \n                  secureTextEntry={true}\n                  autoCorrect={false}\n                  autoCapitalize='none'\n                  onChangeText={(password)=>this.setState({password})}\n    \n                />\n    \n              </Item>\n              <Button style={{marginTop:10}}\n                full\n                rounded\n                success\n                onPress={()=>this.logInUser(this.state.email,this.state.password)}\n              >\n                <Text style={{color:'white'}}>Log in</Text>\n              </Button>\n    \n              <Button style={{marginTop:10}}\n                full\n                rounded\n                primary\n                onPress={()=>this.signUpUser(this.state.email,this.state.password)}\n              >\n                <Text style={{color:'white'}}>Sign up</Text>\n              </Button>\n              <Button style={{ marginTop: 10 }}\n                full\n                rounded\n                primary\n                onPress={() => this.signInWithGoogleAsync()}\n              >\n                <Text style={{ color: 'white' }}> Login With Google</Text>\n              </Button>\n            </Form>\n          </Container>     \n        )\n    }\n}\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        // alignItems: 'center',\n        justifyContent: 'center',\n        padding:10\n      },\n})\n"]},"metadata":{},"sourceType":"module"}