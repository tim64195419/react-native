{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/chengpo-chien/expo-practice/Mahjong/screens/DashboardScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport MapView from 'react-native-maps';\nimport * as Permissions from 'expo-permissions';\nimport firebase from 'firebase';\nimport Polyline from '@mapbox/polyline';\nimport { Marker } from 'react-native-maps';\n\nvar locations = require(\"./locations.json\");\n\nvar DashboardScreen = function (_React$Component) {\n  _inherits(DashboardScreen, _React$Component);\n\n  var _super = _createSuper(DashboardScreen);\n\n  function DashboardScreen() {\n    var _this;\n\n    _classCallCheck(this, DashboardScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      latitude: null,\n      longitude: null,\n      locations: locations\n    };\n\n    _this.mergeCoords = function () {\n      var _this$state = _this.state,\n          latitude = _this$state.latitude,\n          longitude = _this$state.longitude,\n          desLatitude = _this$state.desLatitude,\n          desLongitude = _this$state.desLongitude;\n      var hasStartAndEnd = latitude !== null && desLatitude !== null;\n\n      if (hasStartAndEnd) {\n        var concatStart = latitude + \",\" + longitude;\n        var concatEnd = desLatitude + \",\" + desLongitude;\n\n        _this.getDirections(concatStart, concatEnd);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(DashboardScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _await$Permissions$ge, status, response, _this$state$locations, sampleLocation;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.LOCATION));\n\n            case 2:\n              _await$Permissions$ge = _context.sent;\n              status = _await$Permissions$ge.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n            case 7:\n              response = _context.sent;\n\n            case 8:\n              navigator.geolocation.getCurrentPosition(function (_ref) {\n                var _ref$coords = _ref.coords,\n                    latitude = _ref$coords.latitude,\n                    longitude = _ref$coords.longitude;\n                return _this2.setState({\n                  latitude: latitude,\n                  longitude: longitude\n                }, _this2.mergeCoords);\n              }, function (error) {\n                return console.log('Error:', error);\n              });\n              _this$state$locations = _slicedToArray(this.state.locations, 1), sampleLocation = _this$state$locations[0];\n              this.setState({\n                desLatitude: sampleLocation.coords.latitude,\n                desLongitude: sampleLocation.coords.longitude\n              }, this.mergeCoords);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          latitude = _this$state2.latitude,\n          longitude = _this$state2.longitude;\n\n      if (latitude) {\n        return React.createElement(MapView, {\n          showsUserLocation: true,\n          style: {\n            flex: 1\n          },\n          initialRegion: {\n            latitude: latitude,\n            longitude: longitude,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, \"We need your permission!\"), React.createElement(Button, {\n        title: \"Sign out\",\n        onPress: function onPress() {\n          return firebase.auth().signOut();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return DashboardScreen;\n}(React.Component);\n\nexport default DashboardScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mapStyle: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});","map":{"version":3,"sources":["/Users/chengpo-chien/expo-practice/Mahjong/screens/DashboardScreen.js"],"names":["React","MapView","Permissions","firebase","Polyline","Marker","locations","require","DashboardScreen","state","latitude","longitude","mergeCoords","desLatitude","desLongitude","hasStartAndEnd","concatStart","concatEnd","getDirections","getAsync","LOCATION","status","askAsync","response","navigator","geolocation","getCurrentPosition","coords","setState","error","console","log","sampleLocation","flex","latitudeDelta","longitudeDelta","justifyContent","alignItems","auth","signOut","Component","styles","StyleSheet","create","container","backgroundColor","mapStyle","width","Dimensions","get","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Button,Dimensions } from 'react-native';\nimport MapView from 'react-native-maps';\n\nimport * as Permissions from 'expo-permissions'\nimport firebase from 'firebase';\nimport Polyline from '@mapbox/polyline'\nimport { Marker } from 'react-native-maps'\n\nconst locations = require('./locations.json')\n// const { width, heigt } = Dimensions.get('screen')\n\n\nclass DashboardScreen extends React.Component {\n  state = {\n    latitude: null,\n    longitude: null,\n    locations: locations\n  }\n \n  async componentDidMount() {\n    const { status } = await Permissions.getAsync(Permissions.LOCATION)\n\n    if (status !== 'granted') {\n      const response = await Permissions.askAsync(Permissions.LOCATION)\n    }\n    navigator.geolocation.getCurrentPosition(\n      ({ coords: { latitude, longitude } }) => this.setState({ latitude, longitude }, this.mergeCoords),\n      (error) => console.log('Error:', error)\n    )\n\n    const { locations: [ sampleLocation ] } = this.state\n\n    this.setState({\n      desLatitude: sampleLocation.coords.latitude,\n      desLongitude: sampleLocation.coords.longitude\n    }, this.mergeCoords)\n\n\n  }\n\n  mergeCoords = () => {\n    const {\n      latitude,\n      longitude,\n      desLatitude,\n      desLongitude\n    } = this.state\n\n    const hasStartAndEnd = latitude !== null && desLatitude !== null\n\n    if (hasStartAndEnd) {\n      const concatStart = `${latitude},${longitude}`\n      const concatEnd = `${desLatitude},${desLongitude}`\n      this.getDirections(concatStart, concatEnd)\n    }\n  }\n\n  render() {  \n    const { latitude,longitude} = this.state\n    if(latitude){\n      return (\n        <MapView\n            showsUserLocation\n            style={{ flex: 1 }}\n            initialRegion={{\n              latitude,\n              longitude,\n              latitudeDelta: 0.0922,\n              longitudeDelta: 0.0421\n            }}\n          >\n          \n        </MapView> \n          // <Button title=\"Sign out\" onPress={() => firebase.auth().signOut()} />\n          // <Text>DashboardScreen</Text>\n      );\n\n    }\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Text>We need your permission!</Text>\n        <Button title=\"Sign out\" onPress={() => firebase.auth().signOut()} />\n      </View>\n    )\n    \n  }\n}\nexport default DashboardScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  mapStyle: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n  },\n});"]},"metadata":{},"sourceType":"module"}